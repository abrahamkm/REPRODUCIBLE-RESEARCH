---
title: "REP RESEARCH PEER ASSIGNMENT 01"
author: "Abraham Kandathil"
date: "15 November 2015"
output: html_document
---
#Loading the libraries and data from the working directory


```{r,echo=FALSE,message=FALSE,warning=FALSE}
library(UsingR)
library(manipulate)
library(reshape)
library(ggplot2)
library(dplyr)
```

```{r}
activity<-read.csv("activity.csv", header = TRUE)
```

#Mean total number of steps taken per day

(ignoring the missing values in the dataset)

1. Calculating the total number of steps taken per day

2. Histogram of the total number of steps taken each day

3. Computing mean and median of the total number of steps taken per day

```{r,echo=FALSE}
dayvar<-vector(mode="numeric",length=61)
for (i in 1:61){
  sumsteps<-0
  for (j in 1:288){
    sumsteps<-sum(sumsteps,activity$steps[288*(i-1)+j],na.rm=TRUE)
  }
  dayvar[i]<-sumsteps
}
```

```{r,echo=FALSE}
histogram(dayvar, xlab='STEPS')
```

###Mean of the total number of steps taken per day
```{r,echo=FALSE}
mean(dayvar,na.rm=TRUE)
```


###Median of the total number of steps taken per day
```{r,echo=FALSE}
median(dayvar,na.rm=TRUE)
```

#Average daily activity pattern

1. Time series plot of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)

2. Finding 5-minute interval, on average across all the days in the dataset, containing the maximum number of steps

```{r,echo=FALSE}
stepsvar<-vector(mode="numeric",length=288)
for (i in 1:288){
  for (j in 1:61){
    stepsvar[i]<-sum(stepsvar[i],activity$steps[288*(j-1)+i],na.rm=TRUE)
  }
  stepsvar[i]<-stepsvar[i]/61
}
```

```{r,echo=FALSE}
plot(stepsvar,xlab="TIME INTERVALS (288 nos of 5 minute intervals in a day)",ylab="STEPS TAKEN IN AN INTERVAL",type="l")
```

### Maximum value of steps taken and time interval in which maximum value is attaned

```{r,echo=FALSE}
max(stepsvar)

which.max(stepsvar)

```

#Imputing missing values

1. Calculating and report the total number of missing values in the dataset (i.e. the total number of rows with NAs)

2. Strategy for filling in all of the missing values in the dataset is to use the mean for that 5-minute interval.

3. Creating a new dataset that is equal to the original dataset but with the missing data filled in.

4. Making a histogram of the total number of steps taken each day 

5. Calculating and reporting the mean and median total number of steps taken per day. 

### No. of cases with NA values

```{r,echo=FALSE}
sum(is.na(activity$steps)) 

actvar<-vector(mode="numeric",length=17568)

for (i in 1:17568){
  if (is.na(activity$steps[i])){
    k<-i%%288
    if (k!=0){
      actvar[i]<-round(stepsvar[k])
    } else{
      actvar[i]<-round(stepsvar[288])
    }
  } else{
    actvar[i]<-activity$steps[i]
  }
}

activity$steps<-actvar

dayvar<-vector(mode="numeric",length=61)
for (i in 1:61){
  sumsteps<-0
  for (j in 1:288){
    sumsteps<-sum(sumsteps,activity$steps[288*(i-1)+j],na.rm=TRUE)
  }
  dayvar[i]<-sumsteps
}
```

```{r,echo=FALSE}
histogram(dayvar)
```

##New Mean of the steps taken
```{r,echo=FALSE}
mean(dayvar,na.rm=TRUE)
```
##New Median of the steps taken
```{r,echo=FALSE}
median(dayvar,na.rm=TRUE)
```

**The Mean has changed with inputting for the missing values while the Median has stayed the same.**

# Differences in activity patterns between weekdays and weekends

1. Creating a new factor variable in the dataset with two levels – “weekday” and “weekend” indicating whether a given date is a weekday or weekend day.

2. Making a panel plot containing a time series plot (i.e. type = "l") of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all weekday days or weekend days (y-axis). 

```{r,echo=FALSE}
datevar<-as.Date(activity$date)

weekvar<-vector(mode="character",length=17568)
for (i in 1:17568){
  tmp<-weekdays(datevar[i],abbreviate=T)
  if ((tmp!="Sat") & tmp!="Sun" )
  {
    weekvar[i]<-"WEEK DAY"
  } 
  else{
    weekvar[i]<-"WEEK END"
  }
}  
wvar<-as.factor(weekvar)

activity<-mutate(activity,Weekdaytype=wvar)

stepsweekdayvar<-vector(mode="numeric",length=288)
stepsweekendvar<-vector(mode="numeric",length=288)

for (i in 1:288){
  for (j in 1:61){
    if (activity$Weekdaytype[288*(j-1)+i]=="WEEK DAY"){
      stepsweekdayvar[i]<-sum(stepsweekdayvar[i],activity$steps[288*(j-1)+i],na.rm=TRUE)
    } else{
      stepsweekendvar[i]<-sum(stepsweekendvar[i],activity$steps[288*(j-1)+i],na.rm=TRUE)
    }
  }
  stepsweekdayvar[i]<-stepsweekdayvar[i]/45
  stepsweekendvar[i]<-stepsweekendvar[i]/16
  
} 
par(mfrow=c(2,1))
```

```{r,echo=FALSE}
plot(stepsweekdayvar,xlab="TIME INTERVALS (288 nos of 5 minute intervals in a day)",ylab="STEPS TAKEN IN THAT INTERVAL",type="l")

plot(stepsweekendvar,xlab="TIME INTERVALS (288 nos of 5 minute intervals in a day)",ylab="STEPS TAKEN IN THAT INTERVAL",type="l")

```

